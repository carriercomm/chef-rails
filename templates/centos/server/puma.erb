#!/bin/bash
#
# Alexander Merkulov sasha@merqlove.ru
# Contributors  : @elvanja, @troyanov, @eiyaya, @foyo23, @nielsbasjes, @relip, @JasonMing, @andronat, @merqlove
# App Version   : 6.x

# chkconfig: 2345 82 55
# processname: puma_<%= @app %>
# description: Runs puma <%= @app %> for nginx integration.

# Related (kudos @4sak3n0ne):
# https://github.com/gitlabhq/gitlabhq/issues/1049#issuecomment-8386882
# https://gist.github.com/3062860

# Save original $PATH
# /etc/rc.d/init.d/functions resets $PATH to default(/sbin:/usr/sbin:/bin:/usr/bin).
# Consequently, rvm and compiled ruby with custom path (which isn't /usr/bin) cannot be executed.

# Include RedHat function library
. /etc/rc.d/init.d/functions

# The name of the service
NAME="puma_<%= @app %>"

# The username and path to the gitlab source
USER=<%= @user %>
APP_ROOT=<%= @path %>
APP_PATH="$APP_ROOT/current"
APP_SHARED="$APP_ROOT/shared"

CONFIG="$APP_SHARED/config/puma.rb"

# The PID and LOCK files used by puma
UPID="$APP_SHARED/tmp/pids/puma.pid"
ULOCK="/var/lock/subsys/$NAME"

# The options to use when running puma
OPTS="-C $CONFIG -e <%= @environment || "production" %>"

POSTGRESQL_BIN = "/usr/pgsql-<%= node['postgresql']['version'] %>/bin"

# Ruby related path update
RBENV_ROOT="<%= node['rbenv']['root_path'] %>"
RBENV_SHIMS="$RBENV_ROOT/shims"
RBENV_BIN="$RBENV_ROOT/bin"

RBENV_ROOT_PATCH="export RBENV_ROOT && export POSTGRESQL_BIN"
RUBY_PATH_PATCH="PATH=/usr/local/bin:/usr/local/lib:$RBENV_SHIMS:$RBENV_BIN:$POSTGRESQL_BIN && export PATH"

start() {
cd $APP_PATH

# Start puma
echo -n $"Starting puma: "
daemon --pidfile=$UPID --user=$USER "$RUBY_PATH_PATCH && $RBENV_ROOT_PATCH && bundle exec puma $OPTS"
puma=$?
[ $puma -eq 0 ] && touch $ULOCK
echo

return $puma
}

stop() {
cd $APP_PATH

# Stop puma
echo -n $"Stopping puma: "
killproc -p $UPID
puma=$?
[ $puma -eq 0 ] && rm -f $ULOCK
echo

return $puma
}

restart() {
stop
start
}

reload() {
cd $APP_PATH
if query_status ; then
echo -n "Hot-restarting puma..."
kill -s SIGUSR2 `cat $UPID`

echo -n "Doublechecking the process restart..."
sleep 5
if query_status ; then
echo "done"
exit 0
else
echo -n "Puma reload failed :/"
fi
fi

restart
}

get_status() {
status -p $UPID $NAME
}

query_status() {
get_status >/dev/null 2>&1
}

case "$1" in
start)
query_status && exit 0
start
;;
stop)
query_status || exit 0
stop
;;
restart)
restart
;;
reload)
reload
;;
status)
get_status
;;
*)
N=/etc/init.d/$NAME
echo "Usage: $N {start|stop|restart|reload|status}" >&2
exit 1
;;
esac

exit 0
